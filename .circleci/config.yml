docker-defaults: &docker-defaults
  docker:
    - image: quay.io/nyulibraries/circleci_docker:18.06.1-dc-1.23.2-0
  working_directory: ~/app

build_docker: &build_docker
  run:
    name: Build Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      touch secrets.env
      docker-compose build

test: &test
  run:
    name: Test
    command: |
      touch secrets.env
      docker-compose run test rake

auth_quay: &auth_quay
  run:
    name: Authenticate Quay
    command: |
      docker login -u "$QUAY_USERNAME" -p "$QUAY_PASSWORD" quay.io

hermes_deploy: &hermes_deploy
  run:
    name: Deploy via Hermes
    command: |
      export TAG=${CIRCLE_BRANCH//\//_}-${CIRCLE_SHA1}
      docker run -e HERMES_HOST -e HERMES_SECRET quay.io/nyulibraries/hermesclient:master setImage -deployment=salon-puma -tag=$TAG

push_docker: &push_docker
  run:
    name: Push Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker tag salon_arch quay.io/nyulibraries/salon:${BRANCH_NO_SLASH}
      docker tag salon_arch quay.io/nyulibraries/salon:${BRANCH_NO_SLASH}-${CIRCLE_SHA1}
      docker push quay.io/nyulibraries/salon:${BRANCH_NO_SLASH}
      docker push quay.io/nyulibraries/salon:${BRANCH_NO_SLASH}-${CIRCLE_SHA1}

version: 2
jobs:
  test-and-build-image:
    <<: *docker-defaults
    steps:
      - checkout
      - setup_remote_docker
      - <<: *build_docker
      - <<: *test
      - <<: *auth_quay
      - <<: *push_docker

  deploy-dev:
    <<: *docker-defaults
    steps:
      - setup_remote_docker
      - <<: *auth_quay
      - run:
          name: Export Hermes Dev env vars
          command: |
            echo 'export HERMES_HOST=https://hermes-dev.library.nyu.edu' >> $BASH_ENV
            echo 'export HERMES_SECRET=$HERMES_SECRET_DEV' >> $BASH_ENV
      - <<: *hermes_deploy

  deploy-prod:
    <<: *docker-defaults
    steps:
      - setup_remote_docker
      - <<: *auth_quay
      - run:
          name: Export Hermes Dev env vars
          command: |
            echo 'export HERMES_HOST=https://hermes.library.nyu.edu' >> $BASH_ENV
            echo 'export HERMES_SECRET=$HERMES_SECRET_PROD' >> $BASH_ENV
      - <<: *hermes_deploy

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - test-and-build-image
      - deploy-dev:
          requires:
            - test-and-build-image
          filters:
            branches:
              ignore:
                - master
      - deploy-prod:
          requires:
            - test-and-build-image
          filters:
            branches:
              only: master
